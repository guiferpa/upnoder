name: API

on:
  push:
    paths:
      - "api/**"
  workflow_dispatch:

defaults:
  run:
    working-directory: ./api

env:
  AWS_REGION: us-east-2
  ECS_SERVICE: api
  ECS_CLUSTER: Upnoder
  ECR_REPOSITORY: upnoder/api

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Deploy to App Runner
        id: deploy-apprunner
        uses: awslabs/amazon-app-runner-deploy@main
        env:
          PORT: 3000
          AWS_TABLE_NAME: upnoder-files
          AWS_BUCKET_NAME: upnoder-files
          AWS_REGION: us-east-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_RUNNER_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_RUNNER_SECRET_ACCESS_KEY }}
        with:
          service: upnoder_api
          image: ${{ steps.build-image.outputs.image }}
          access-role-arn: ${{ secrets.ECR_ACCESS_ROLE_ARN }}
          region: ${{ env.AWS_REGION }}
          cpu: 1
          memory: 2
          copy-env-vars: |
            PORT
            AWS_TABLE_NAME
            AWS_BUCKET_NAME
            AWS_REGION
            AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY

      - name: App Runner URL
        run: echo "App runner URL ${{ steps.deploy-apprunner.outputs.service-url }}"

